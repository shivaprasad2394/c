

	IN SLL we can have only one way traversal.
	DLL:
	====
		----> two way traversal is possible;
		---->in dll node should contain threee parts.
			1)prev link to point to previous node
			2)next link to point to next node
			3)data part.
	
	typedef struct node
	{
		int data;
		struct node *prev;
		struct node *next;
	}NODE;
----------------------------------------------------------------
	typedef struct node
	{
		struct node *prev;
		int data;
		struct node *next;
	}NODE;
	NODE *head=NULL;
	NODE *create(int ele)
	{
		NODE *new=(NODE *)malloc(sizeof(NODE));
		if(new==NULL)
		{
			printf("mem failed");
			return NULL;
		}
		new->data=ele;
		new->prev=NULL;
		new->next=NULL;
		return new;
	}
	void insertfirst(int ele)
	{
		NODE *newnode=create(10);
		if(newnode==NULL)
			return;
		head=newnode;
	}

	void insertbeg(int ele)
	{
		if(head==NULL)
		{
			insertfirst(ele);
			return;
		}
		NODE *newnode=create(10);
		if(newnode==NULL)
			return;
		newnode->next=head;
		head->prev=newnode;
		head=newnode;
	}
	void display()
	{
		if(head==NULL)
		{
			printf("list emepty");
			return;
		}
		NODE *temp=head;
		while(temp!=NULL)
		{
			printf("%d\t",temp->data);
			temp=temp->next;
		}
	}
	void insertend(int ele)
	{
		if(head==NULL)
		{
			insertfirst(ele);
			retrun;
		}
		NODE *newnode=create(ele);
		if(newnode==NULL)
			return;
		NODE *temp=head;
		while(temp->next!=NULL)
			temp=temp->next;
		temp->next=newnode;
		newnode->prev=temp;
	}
	void insertafter(int ele,int key)
	{
		NODE *newnode=create(ele);
		if(newnode==NULL)
			return;
		
		


	}
	int main()
	{
		insetbeg(10);
		insertbeg(20);
		insertbeg(30);
		display();
		insertend(40);
		insertafter(60,20);
	}
